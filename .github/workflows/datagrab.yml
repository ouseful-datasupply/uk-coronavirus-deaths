name: Grab data and deploy Datasette

on:
  push:
    branches:
    - master
  schedule:
    - cron:  '* 15 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v1
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Grab data
      run: |
        #rm -f nhs_dailies.db
        git config --global user.email "uk-cv-deaths-bot@example.com"
        git config --global user.name "uk-cv-deaths-bot"
        test -f nhs_dailies.db || (touch nhs_dailies.db && git add nhs_dailies.db && git commit -m "Updated UK CV deaths db")
        python uk_daily_deaths_nhs.py
    - name: Commit and push
      run: |
        git diff --quiet || (git add nhs_dailies.db && git commit -m "Updated UK CV deaths db")
        git push
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Deploy Datasette using Zeit Now
      env:
        NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
      run: |
        datasette publish now nhs_dailies.db \
          --token $NOW_TOKEN \
          --project uk-cv-deaths \
          --metadata metadata.json \
          --public
